name: "PR Pipeline"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  code_formatting:
    name: Check Code Format
    runs-on: ubuntu-latest
    timeout-minutes: 60

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Java 21 (Temurin)
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Check Code Format
        run: ./gradlew ktlintCheck --no-daemon --no-configuration-cache --no-build-cache

  build_android:
    name: Build Android app and Desktop
    runs-on: ubuntu-latest
    timeout-minutes: 60

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Java 21 (Temurin)
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run Build, Lint and Tests
        run: |
          EXPECTED_COUNT=8

          ./gradlew build --no-daemon --no-configuration-cache --no-build-cache --stacktrace 2>&1 | tee build_log.txt || true

          # Count the number of compile warnings (lines starting with "w:").
          WARNING_COUNT=$(grep -c "w: " build_log.txt || true)

          # Check if the count exceeds the threshold
          echo "Found $WARNING_COUNT warnings. Expected exactly $EXPECTED_COUNT."
          if [ $WARNING_COUNT -ne $EXPECTED_COUNT ]; then
            echo "❌ Error: The number of warnings ($WARNING_COUNT) does not match the expected count of $EXPECTED_COUNT."
            # Exit with a non-zero code to fail the workflow.
            exit 1
          else
            echo "✅ The number of warnings is exactly as expected."
          fi

#      - name: Upload Test Reports
#        uses: actions/upload-artifact@v4
#        with:
#          name: test-reports
#          path: |
#            **/build/reports/tests/testDebugUnitTest/
#            **/build/reports/tests/test/

#  build_ios:
#    name: Build iOS app
#    runs-on: macos-latest
#    timeout-minutes: 60
#
#    permissions:
#      actions: read
#      contents: read
#      security-events: write
#
#    steps:
#      - uses: maxim-lobanov/setup-xcode@v1
#        with:
#          xcode-version: latest-stable
#
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: Set up Java 21 (Temurin)
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '21'
#
#      - name: Build shared Kotlin framework
#        run: ./gradlew compileKotlinIosSimulatorArm64 compileKotlinIosX64 --no-daemon --stacktrace
#
#      - name: Build app
#        run: xcodebuild -project iosApp/iosApp.xcodeproj -configuration Debug -scheme iosApp -sdk iphonesimulator
